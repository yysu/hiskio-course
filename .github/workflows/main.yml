name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - '*'

jobs:
  test:
    name: static test (YAML & Shell & docker)
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Install required packages
      run: sudo apt-get install -f yamllint shellcheck

    - name: Run shell check
      run: |
        pushd cicd/application
        make shellcheck
        popd

    - name: Run shell check
      run: |
        pushd cicd/application
        make docker-lint
        popd

    - name: Run shell check
      run: |
        pushd cicd/application
        make yaml-lint
        popd

  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: test
    steps:
    - name: Check out the repo
      uses: actions/checkout@v3
    
    - name: Log in to Docker Hub
      uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
      with:
        images: jim123820/cicd-app
    
    - name: Build and push Docker image
      uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
      with:
        context: ./cicd/application
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

  test-k8s-minikube:
    runs-on: ubuntu-latest
    needs: push_to_registry
    steps:
    - uses: actions/checkout@v2

    - name: Install minikube
      run: |
        curl -Lo minikube https://github.com/kubernetes/minikube/releases/download/v1.22.0-beta.0/minikube-linux-amd64
        chmod +x minikube
        sudo mv ./minikube /usr/local/bin

    - name: Install kubectl
      run: |
        curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
        sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
        curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

    - name: Install bats
      run: |
        git clone https://github.com/bats-core/bats-core.git
        cd bats-core/
        sudo ./install.sh /usr/local

    - name: Install kubernetes and run Test
      run: |
        minikube start --driver=docker
        pushd cicd/application
        kubectl apply -f yamls
        WAIT_TIME=0 ;until [ $WAIT_TIME -eq 24 ] || [ "3" = "$(kubectl get deployment nginx -ojsonpath='{.status.readyReplicas}')" ]; do echo "sleep ${WAIT_TIME}"; sleep 5; WAIT_TIME=$((WAIT_TIME+1)); done
        TYPE=minikube bats -t tests/test.bats
        popd

  test-k8s-kind:
    runs-on: ubuntu-latest
    needs: push_to_registry
    steps:
    - uses: actions/checkout@v2

    - name: Create k8s Kind Cluster
      uses: helm/kind-action@v1.2.0

    - name: Install kubectl
      run: |
        curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
        sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
        curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
    - name: Install bats
      run: |
        git clone https://github.com/bats-core/bats-core.git
        cd bats-core/
        sudo ./install.sh /usr/local

    - name: Test
      run: |
        pushd cicd/application
        kubectl apply -f yamls
        kubectl get nodes
        WAIT_TIME=0 ;until [ $WAIT_TIME -eq 24 ] || [ "3" = "$(kubectl get deployment nginx -ojsonpath='{.status.readyReplicas}')" ]; do echo "sleep ${WAIT_TIME}"; sleep 5; WAIT_TIME=$((WAIT_TIME+1)); done
        kubectl get pods
        TYPE=GITHUB-KIND bats -t tests/test.bats
        popd
